--FE da feets
--credit to Ice & Fire#0001                (i just converted it. its a useless script for me.)
--Reanimate
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
    if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
    game:GetService("RunService").Heartbeat:connect(function()
v.Velocity = Vector3.new(-30,0,0)
    end)
end
end
Bypass = "death"
loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()






--// SHORTCUTS \\--
local RNG = (function()
    local RNG = Random.new();
    return function(min,max,int)
        return int and RNG:NextInteger(min,max) or RNG:NextNumber(min,max)
    end;
end)();
local S = setmetatable({},{__index = function(s,i) return game:service(i) end})
local CF = {
 N=CFrame.new;
 A=CFrame.Angles;
 fEA=CFrame.fromEulerAnglesXYZ;
}
local C3 = {
 N=Color3.new;
 RGB=Color3.fromRGB;
 HSV=function(...)local data={...}if(typeof(data)=='Color3')then return Color3.toHSV(...)else return Color3.fromHSV(...)end;end;
}
local V3 = {
 N=Vector3.new;
 FNI=Vector3.FromNormalId;
 A=Vector3.FromAxis;
}
local M = {
 C=math.cos;
 R=math.rad;
 S=math.sin;
 T=math.tan;
 AT=math.atan;
 AT2=math.atan2;
 AS=math.asin;
 AC=math.acos;
 A=math.abs;
 F=math.floor;
 CE=math.ceil;
 P=math.pi;
 RNG=RNG;
 H=math.huge;
 RRNG=function(...) return math.rad(RNG(...)) end
}
local R3 = Region3.new
local De = S.Debris
local WS = workspace
local Lght = S.Lighting
local RepS = S.ReplicatedStorage
local IN = Instance.new
local Plrs = S.Players

--// INITIALIZATION \\--
local Plr = Plrs.LocalPlayer
print(Plr)
local Char = game.workspace.non
local Hum = Char:FindFirstChildOfClass'Humanoid'
assert(Hum and Hum.RigType==Enum.HumanoidRigType.R6,"You need to have a valid Humanoid instance! (Exising and R6)")
local Head = Char.Head
local RArm = Char["Right Arm"]
local LArm = Char["Left Arm"]
local RLeg = Char["Right Leg"]
local LLeg = Char["Left Leg"] 
local Torso= Char.Torso
local Root = Char.HumanoidRootPart
local NeutralAnims = true
local Attack = false
local legAnims = true
local Mouse = Plr:GetMouse()
local EffectFolder=Instance.new("Folder")
EffectFolder.Name='Effects'
EffectFolder.Parent=Char

local Movement = 10
local Sine = 0;
local Change = 1;
local wsVal = 6

--// INSTANCE CREATORS \\--
local baseSound = IN("Sound")
function Sound(parent,id,pitch,volume,looped,effect,autoPlay)
 local Sound = baseSound:Clone()
 Sound.SoundId = "rbxassetid://".. tostring(id or 0)
 Sound.Pitch = pitch or 1
 Sound.Volume = volume or 1
 Sound.Looped = looped or false
 if(autoPlay)then
  coroutine.wrap(function()
   repeat wait() until Sound.IsLoaded
   Sound.Playing = autoPlay or false
  end)()
 end
 if(not looped and effect)then
  Sound.Stopped:connect(function()
   Sound.Volume = 0
   Sound:destroy()
  end)
 elseif(effect)then
  warn("Sound can't be looped and a sound effect!")
 end
 Sound.Parent =parent or workspace
 return Sound
end
function Part(parent,color,material,size,cframe,anchored,cancollide)
 local part = IN("Part")
 part[typeof(color) == 'BrickColor' and 'BrickColor' or 'Color'] = color or C3.N(0,0,0)
 part.Material = material or Enum.Material.SmoothPlastic
 part.TopSurface,part.BottomSurface=10,10
 part.Size = size or V3.N(1,1,1)
 part.CFrame = cframe or CF.N(0,0,0)
 part.CanCollide = cancollide or false
 part.Anchored = anchored or false
 part.Parent = parent
 return part
end

function Weld(part0,part1,c0,c1)
 local weld = IN("Weld")
 weld.Part0 = part0
 weld.Part1 = part1
 weld.C0 = c0 or CF.N()
 weld.C1 = c1 or CF.N()
 weld.Parent = part0
 return weld
end

function Mesh(parent,meshtype,meshid,textid,scale,offset)
 local part = IN("SpecialMesh")
 part.MeshId = meshid or ""
 part.TextureId = textid or ""
 part.Scale = scale or V3.N(1,1,1)
 part.Offset = offset or V3.N(0,0,0)
 part.MeshType = meshtype or Enum.MeshType.Sphere
 part.Parent = parent
 return part
end

function SoundPart(id,pitch,volume,looped,effect,autoPlay,cf)
 local soundPart = Part(EffectFolder,C3.N(1,1,1),Enum.Material.SmoothPlastic,V3.N(.05,.05,.05),cf,true,false)
 soundPart.Transparency=1
 local Sound = IN("Sound")
 Sound.SoundId = "rbxassetid://".. tostring(id or 0)
 Sound.Pitch = pitch or 1
 Sound.Volume = volume or 1
 Sound.Looped = looped or false
 if(autoPlay)then
  coroutine.wrap(function()
   repeat wait() until Sound.IsLoaded
   Sound.Playing = autoPlay or false
  end)()
 end
 if(not looped and effect)then
  Sound.Stopped:connect(function()
   Sound.Volume = 0
   soundPart:destroy()
  end)
 elseif(effect)then
  warn("Sound can't be looped and a sound effect!")
 end
 Sound.Parent = soundPart
 return Sound
end

function Joint(name,part0,part1,c0,c1,type)
 local joint = IN(type or "Motor6D")
 joint.Part0 = part0
 joint.Part1 = part1
 joint.C0 = c0 or CF.N()
 joint.C1 = c1 or CF.N()
 joint.Parent=part0
 joint.Name=name or part0.." to "..part1.." "..joint.ClassName
 return joint
end

function Animate(joint,c0,alpha,style,dir)
 if(style=='Lerp')then
  joint.C0 = joint.C0:lerp(c0,alpha)
 else
  local info = TweenInfo.new(alpha or 1,style or Enum.EasingStyle.Linear,dir or Enum.EasingDirection.Out,0,false,0)
  local tween = S.TweenService:Create(joint,info,{C0=c0})
  tween:Play();
  return tween;
 end
end

function NewInstance(instance,parent,properties)if(properties.Parent)then properties.Parent=parent end;local new = IN(instance)if(properties)then for prop,val in next, properties do pcall(function() new[prop]=val end)end;end;new.Parent=parent;return new;end

function GetAdjacentParts(part)
 local function createLargerHitbox(part)
  local n = 0.2
  local clone = part:Clone()
  
  clone.Transparency = .8
  clone.BrickColor = BrickColor.Red()
  clone.Size = clone.Size + Vector3.new(n, n, n)
  clone.Name = "hitbox"
  clone.CFrame = part.CFrame
  clone.Anchored=true
  clone.CanCollide=true
  
  if (clone:IsA("WedgePart")) then
   clone.Size = clone.Size + Vector3.new(0, n, n)
   clone.CFrame = part.CFrame * CFrame.new(0, n / 2, -n /2)
  end
  
  if (clone:IsA("CornerWedgePart")) then
   clone.Size = clone.Size + Vector3.new(n, n, n)
   clone.CFrame = part.CFrame * CFrame.new(-n / 2, n / 2, n / 2)
  end
  clone.Parent = part
  
  return clone
 end
 
 local hitbox = createLargerHitbox(part)
 local touchingParts = hitbox:getTouchingParts()
 hitbox:Destroy()
 
 return (function()
  local adjacent={}
  for _,v in next, touchingParts do if(v~=part)then table.insert(adjacent,v)end;end
  return adjacent;
 end)()
end
--// CUSTOMIZABLE VARIABLES \\--

local DamageColor = BrickColor.new'Really red';
local MusicData = {Parent=Torso,ID=2666435584;Pitch=1;Volume=5;}
local God = false
local WalkSpeed = 50

local Music = Sound(MusicData.Parent,MusicData.ID,MusicData.Pitch,MusicData.Volume,true,false,true)
Music.Name = 'Music'

--// JOINTS \\--

local RJ = Joint("RootJoint",Root,Torso,CF.N(),CF.N())
local NK = Joint("Neck",Torso,Head,CF.N(0,1.5,0),CF.N())
local LS = Joint("Left Shoulder",Torso,LArm,CF.N(-.5,-2,0),CF.N(0,.5,0))
local RS = Joint("Right Shoulder",Torso,RArm,CF.N(.5,-2,0),CF.N(0,.5,0))
local LH = Joint("Left Hip",Torso,LLeg,CF.N(0,0,0),CF.N(0,0,0))
local RH = Joint("Right Hip",Torso,RLeg,CF.N(0,0,0),CF.N(0,0,0))

--Torso.Anchored = true

local LSC0 = LS.C0
local RSC0 = RS.C0
local NKC0 = NK.C0
local LHC0 = LH.C0
local RHC0 = RH.C0
local RJC0 = RJ.C0

--// Artificial HB \\--

local ArtificialHB = IN("BindableEvent", script)
ArtificialHB.Name = "Heartbeat"

script:WaitForChild("Heartbeat")

local tf = 0
local allowframeloss = false
local tossremainder = false
local lastframe = tick()
local frame = 1/60
ArtificialHB:Fire()

game:GetService("RunService").Heartbeat:connect(function(s, p)
 tf = tf + s
 if tf >= frame then
  if allowframeloss then
   script.Heartbeat:Fire()
   lastframe = tick()
  else
   for i = 1, math.floor(tf / frame) do
    ArtificialHB:Fire()
   end
   lastframe = tick()
  end
  if tossremainder then
   tf = 0
  else
   tf = tf - frame * math.floor(tf / frame)
  end
 end
end)

function swait(num)
 if num == 0 or num == nil then
  ArtificialHB.Event:wait()
 else
  for i = 0, num do
   ArtificialHB.Event:wait()
  end
 end
end

--// STOP ANIMATIONS \\--
for _,v in next, Hum:GetPlayingAnimationTracks() do
 v:Stop();
end

pcall(game.Destroy,Char:FindFirstChild'Animate')
pcall(game.Destroy,Hum:FindFirstChild'Animator')

--// EFFECT FUNCTIONS \\--



local fromaxisangle = function(x, y, z) -- credit to phantom forces devs
 if not y then
  x, y, z = x.x, x.y, x.z
 end
 local m = (x * x + y * y + z * z) ^ 0.5
 if m > 1.0E-5 then
  local si = math.sin(m / 2) / m
  return CFrame.new(0, 0, 0, si * x, si * y, si * z, math.cos(m / 2))
 else
  return CFrame.new()
 end
end

function fakePhysics(elapsed,cframe,velocity,rotation,acceleration)
 local pos = cframe.p
 local matrix = cframe-pos
 return fromaxisangle(elapsed*rotation)*matrix+pos+elapsed*velocity+elapsed*elapsed*acceleration
end

function CastRay(startPos,endPos,range,ignoreList)
 local ray = Ray.new(startPos,(endPos-startPos).unit*range)
 local part,pos,norm = workspace:FindPartOnRayWithIgnoreList(ray,ignoreList or {},false,true)
 return part,pos,norm,(pos and (startPos-pos).magnitude)
end

function GetTorso(char)
 return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
end

function Projectile(data)
 local Size = data.Size or 1;
 local Origin = data.Origin or CFrame.new();
 local Velocity = data.Velocity or Vector3.new(0,100,0);
 local Gravity = data.Gravity or workspace.Gravity;
 local Color = data.Color or Color3.new(.7,0,0);
 local Lifetime = data.Lifetime or 1;
 local Material = data.Material or Enum.Material.Glass;
 local ignore = data.Ignorelist or {Char};
 local Init = data.Init;
 local Update = data.Update;
 local HitFunc = data.Hit;
 local ShouldCollide = data.BeforeCollision;
 local DeleteOnHit = not not data.DeleteOnHit;
 local ProjectilePart = data.Projectile or nil;
 local Look = data.AimAtPos or false;
 local drop = ProjectilePart or Part(nil,Color,Material,Vector3.new(Size,Size,Size),Origin,true,false)
 local StartTravel = tick()
 local currCF = data.Origin
 if(not ProjectilePart)then
  Mesh(drop,Enum.MeshType.Sphere)
  drop.Parent=EffectFolder
 end
 drop.Material = Material
 drop.Color = Color
 drop.CFrame=Origin
 local object=setmetatable({Part=drop},{
  __newindex=function(s,i,v)
   if(i=='Gravity')then StartTravel = tick() data.Origin = currCF Origin=currCF data.Gravity = v Gravity=v
   elseif(i=='Velocity')then StartTravel = tick() data.Origin = currCF Origin=currCF data.Velocity = v Velocity=v
   elseif(i=='Lifetime')then data.Lifetime = v Lifetime=v 
   elseif(i=='Ignorelist')then data.Ignorelist = v ignore=v
   elseif(i=='DeleteOnHit')then data.DeleteOnHit = v DeleteOnHit=v 
   else
    pcall(function()
     drop[i]=v
    end)
   end
  end;
  __index=data;
 })
 
 
 if(Init)then
  Init(drop)
 end
 local startTick = tick();
 coroutine.wrap(function()
  while true do
   local elapsed = tick()-startTick
   local trElapsed = tick()-StartTravel
   if(elapsed>Lifetime)then
    drop:destroy();
    break
   end
   local newCF = fakePhysics(trElapsed,Origin,Velocity,Vector3.new(),Vector3.new(0,-Gravity,0))
   local nextCF = fakePhysics(trElapsed+.05,Origin,Velocity,Vector3.new(),Vector3.new(0,-Gravity,0))
   local dist = (drop.Position-newCF.p).magnitude
   local hit,pos,norm = CastRay(drop.Position,newCF.p,dist,ignore)
   currCF=newCF
   local doCollide = hit and (GetTorso(hit.Parent) or hit.CanCollide) and (not ShouldCollide or ShouldCollide(hit))
   if(hit and not doCollide)then table.insert(ignore,hit) end
   if(Look)then
    drop.CFrame = CFrame.new(newCF.p,nextCF.p)
   else
    drop.CFrame = CFrame.new(newCF.p)
   end
   if(Update)then Update(drop,object,elapsed) end
   if(doCollide)then
    if(DeleteOnHit or not HitFunc)then drop:destroy() end
    if(HitFunc)then if(HitFunc(hit,pos,norm,object,drop))then break end end
   end
   if(not drop.Parent)then
    break
   end
   swait()
  end
 end)()
 return object
 end
 
function Chat(txt,timer,clr)
 if(Head:FindFirstChild'Chattie' and Head.Chattie:FindFirstChild'Killchat')then
  Head.Chattie.Killchat.Value=true
 elseif(Head:FindFirstChild'Chattie')then
  Head.Chattie:destroy()
 end
 local nig = V3.N(0,0,0)
 local clr = (typeof(clr)=='BrickColor' and clr.Color or typeof(clr)=='Color3' and clr or C3.N(1,1,1))
 local bg = NewInstance("BillboardGui",Head,{
  Name='Chattie';
  Adornee=Head;
  LightInfluence=0;
  Size=UDim2.new(4,0,2,0);
 })
 local dismiss = NewInstance("BoolValue",bg,{
  Name='Killchat';
 })
 
 local text = NewInstance("TextLabel",bg,{
  BackgroundTransparency=1;
  Size=UDim2.new(1,0,1,0);
  Font=Enum.Font.Fantasy;
  Text=txt;
  TextColor3=clr;
  TextStrokeColor3=C3.N(0,0,0);
  TextScaled=true;
  TextTransparency=0;
  TextStrokeTransparency=.5;
 })
 coroutine.wrap(function()
  for i = 1, 0, -.02 do
   bg.StudsOffsetWorldSpace=nig:lerp(nig+V3.N(0,3,0),EasingFunctions.outBack(1-i,0,1,1,6))
   if(dismiss.Value)then break end
   swait()
  end
  local start = tick()
  nig=bg.StudsOffsetWorldSpace
  repeat swait() until dismiss.Value or tick()-start>=timer
  bg.Name='DismissingChat'
  for i = 0, 1, .05 do
   bg.StudsOffsetWorldSpace=nig:lerp(nig+V3.N(0,2,0),EasingFunctions.linear(i,0,1,1))
   text.TextTransparency=i;
   text.TextStrokeTransparency=.5+i/2;
   swait()
  end
  bg:destroy()
 end)()
end

function ShowDamage(pos,txt,timer,clr)
 local nig = typeof(pos)=='Vector3' and CF.N(pos) or pos
 local part = Part(EffectFolder,clr,Enum.Material.SmoothPlastic,V3.N(.05,.05,.05),nig,true,false)
 part.Transparency=1
 local bg = NewInstance("BillboardGui",part,{
  Adornee=part;
  LightInfluence=0;
  Size=UDim2.new(2,0,1,0);
 })
 local text = NewInstance("TextLabel",bg,{
  BackgroundTransparency=1;
  Size=UDim2.new(1,0,1,0);
  Font=Enum.Font.Fantasy;
  Text=txt;
  TextColor3=part.Color;
  TextStrokeColor3=C3.N(0,0,0);
  TextScaled=true;
  TextTransparency=1;
  TextStrokeTransparency=1;
 })
 coroutine.wrap(function()
  for i = 1, 0, -.02 do
   part.CFrame=nig:lerp(nig+V3.N(0,3,0),EasingFunctions.outBack(1-i,0,1,1,6))
   text.TextTransparency=i;
   text.TextTransparency=text.TextTransparency-.02;
   text.TextStrokeTransparency=text.TextStrokeTransparency-.01;
   swait()
  end
  local start = tick()
  repeat swait() until tick()-start>=timer
  local endRot=M.RNG(-25,25)
  for i = 0, 1, .02 do
   part.CFrame=(nig+V3.N(0,3,0)):lerp(nig+V3.N(0,-10,0),EasingFunctions.inBack(i,0,1,1,6))
   text.TextTransparency=i;
   text.TextTransparency=text.TextTransparency+.02;
   text.TextStrokeTransparency=text.TextStrokeTransparency+.01;
   swait()
  end
  part:destroy()
 end)()
end

function CamshakePlayer(p,settings)
 local sh = script:WaitForChild'CamShake':Clone() 
 local optionFolder = sh:WaitForChild'Options'
 for _,v in next, optionFolder:children() do
  if(settings[v.Name])then
   v.Value=settings[v.Name]
  end
 end
 local originVal;
 if(typeof(settings.Origin)=='Vector3')then
  originVal=IN("Vector3Value")
 elseif(typeof(settings.Origin)=='CFrame')then
  originVal=IN("CFrameValue")
 elseif(typeof(settings.Origin)=='Instance')then
  originVal=IN("ObjectValue")
 end
 if(originVal)then
  originVal.Name = 'Origin'
  originVal.Value = settings.Origin
  originVal.Parent=optionFolder
 end
 local parent = p.Character or p:FindFirstChildOfClass'Backpack' or p:FindFirstChildOfClass'PlayerGui'
 if(parent)then
  local nig = sh:Clone();
  nig.Parent=parent
  nig.Disabled=false
  S.Debris:AddItem(nig,(settings.Duration or 2)+1)
 end
end

function Camshake(settings)
 for _,p in next, game:service'Players':players() do
  CamshakePlayer(p,settings)
 end
end
function Tween(object,properties,time,style,dir,repeats,reverse,delay)
 local info = TweenInfo.new(time or 1,style or Enum.EasingStyle.Linear,dir or Enum.EasingDirection.Out,repeats or 0,reverse or false,delay or 0)
 local tween = S.TweenService:Create(object,info,properties)
 tween:Play()
 return tween;
end

local function numLerp(Start,Finish,Alpha)
    return Start + (Finish- Start) * Alpha
end
function IsValidEnum(val,enum,def)
 local enum = Enum[tostring(enum)]
 local succ,err=pcall(function() return enum[val.Name] end)
 if(not err)then
  return val
 else
  return def
 end
end

function IsValid(val,type,def)
 if(typeof(type)=='string')then
  return (typeof(val)==type and val or def)
 elseif(typeof(type)=='table')then
  for i,v in next, type do
   if(typeof(val)==v)then
    return val
   end
  end
 end
 return def
end

local FXInformation = {}
function EffectFunc(data)
 if(typeof(data)=='Instance' and data:IsA'ModuleScript')then data=require(data)end
 assert(typeof(data)=='table',"Expected 'table' calling EffectFunc")
 data.Parent=EffectFolder
 if(data.BeamEffect)then
  return Slash(data)
 end
 
 local Lifetime = data.Lifetime or 1;
 local Color = data.Color or Color3.new(1,1,1)
 local EndColor = data.EndColor
 local Size = data.Size or Vector3.new(1,1,1)
 local EndSize = data.EndSize
 local Transparency = data.Transparency or 0
 local EndTransparency = data.EndTransparency or 1
 local Material = data.Material or Enum.Material.Neon;
 local Part = typeof(data.RefPart)=='Instance' and data.RefPart or typeof(data.RefPart)=='string' and FXFolder:FindFirstChild(data.RefPart);
 local CF = data.CFrame or CFrame.new(0,10,0)
 local EndCF = data.EndCFrame or data.EndPos
 local Mesh = data.MeshData or data.Mesh or {MeshType=Enum.MeshType.Brick}
 local Rotation = data.Rotation or {0,0,0}
 local UpdateCF = data.UpdateCFrame;
 local Update = data.Update;
 
 local CSQ,SSQ,TSQ,CFQ;
 if(typeof(Color)=='BrickColor')then Color = Color.Color end
 if(typeof(EndColor)=='BrickColor')then EndColor = EndColor.Color end
 if(typeof(Color)=='ColorSequence')then
  CSQ = Color
 elseif(typeof(Color)=='Color3' and typeof(EndColor)=='Color3')then
  CSQ = ColorSequence.new(Color,EndColor)
 elseif(typeof(Color)=='Color3')then
  CSQ = ColorSequence.new(Color)
 else
  CSQ = ColorSequence.new(Color3.new(1,1,1))
 end
 
 
 if(typeof(Size)=='table' and Size.Keypoints and typeof(Size.Keypoints[1].Value)=='Vector3')then
  SSQ = Size
 elseif(typeof(Size)=='Vector3' and typeof(EndSize)=='Vector3')then
  SSQ = Vector3Sequence.new(Size,EndSize)
 elseif(typeof(Size)=='Vector3')then
  SSQ = Vector3Sequence.new(Size)
 else
  SSQ = Vector3Sequence.new(Vector3.new(1,1,1))
 end
 
 if(typeof(CF)=='table' and CF.Keypoints and typeof(CF.Keypoints[1].Value)=='CFrame')then
  CFQ = CF
 elseif(typeof(CF)=='CFrame' and typeof(EndCF)=='CFrame')then
  CFQ = CFrameSequence.new(CF,EndCF)
 elseif(typeof(CF)=='CFrame')then
  CFQ = CFrameSequence.new(CF)
 else
  CFQ = CFrameSequence.new(CFrame.new(0,10,0))
 end
  
 if(typeof(Transparency)=='NumberSequence')then
  TSQ = Transparency
 elseif(typeof(Transparency)=='number' and typeof(EndTransparency)=='number')then
  TSQ = NumberSequence.new(Transparency,EndTransparency)
 elseif(typeof(Transparency)=='number')then
  TSQ = NumberSequence.new(Transparency)
 else
  TSQ = NumberSequence.new(0,1)
 end
 
 
 local part,mesh;
 if(not Part or not Part:IsA'BasePart')then
  part = Instance.new("Part")
  mesh = Instance.new("SpecialMesh",part)
 else
  part=Part:Clone();
  mesh=part:FindFirstChildOfClass'DataModelMesh'
 end
 part.Color = CSQ.Keypoints[1].Value
 part.Transparency = TSQ.Keypoints[1].Value
 part.Size = (not mesh and SSQ.Keypoints[1].Value or Vector3.new(1,1,1))
 part.Anchored = true
 part.CanCollide = false
 part.CFrame = CFQ.Keypoints[1].Value
 part.Material = Material
 part.Locked = true
 part.Parent = EffectFolder
 if(mesh)then
  mesh.Scale = SSQ.Keypoints[1].Value
  mesh.MeshType = Mesh.MeshType or Mesh.Type or Enum.MeshType.Brick
  mesh.MeshId = Mesh.MeshId or Mesh.Id or ""
  mesh.TextureId = Mesh.TextureId or Mesh.Texture or ""
 end
 game:service'Debris':AddItem(part,Lifetime*1.5)
 table.insert(FXInformation,{
  Part=part;
  Mesh=mesh;
  Lifetime=Lifetime;
  Create=tick();
  ColorSeq=CSQ;
  SizeSeq=SSQ;
  TranSeq=TSQ;
  CFSeq=CFQ;
  ColorPoint=CSQ.Keypoints[1];
  SizePoint=SSQ.K
